"use strict";
exports.__esModule = true;
exports.typeDefs = "type AggregateTask {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar Long\n\ntype Mutation {\n  createTask(data: TaskCreateInput!): Task!\n  updateTask(data: TaskUpdateInput!, where: TaskWhereUniqueInput!): Task\n  updateManyTasks(data: TaskUpdateManyMutationInput!, where: TaskWhereInput): BatchPayload!\n  upsertTask(where: TaskWhereUniqueInput!, create: TaskCreateInput!, update: TaskUpdateInput!): Task!\n  deleteTask(where: TaskWhereUniqueInput!): Task\n  deleteManyTasks(where: TaskWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  task(where: TaskWhereUniqueInput!): Task\n  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task]!\n  tasksConnection(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TaskConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  task(where: TaskSubscriptionWhereInput): TaskSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype Task {\n  id: ID!\n  title: String!\n  isCompleted: Boolean!\n  author: User\n}\n\ntype TaskConnection {\n  pageInfo: PageInfo!\n  edges: [TaskEdge]!\n  aggregate: AggregateTask!\n}\n\ninput TaskCreateInput {\n  title: String!\n  isCompleted: Boolean\n  author: UserCreateOneWithoutTasksInput\n}\n\ninput TaskCreateManyWithoutAuthorInput {\n  create: [TaskCreateWithoutAuthorInput!]\n  connect: [TaskWhereUniqueInput!]\n}\n\ninput TaskCreateWithoutAuthorInput {\n  title: String!\n  isCompleted: Boolean\n}\n\ntype TaskEdge {\n  node: Task!\n  cursor: String!\n}\n\nenum TaskOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  isCompleted_ASC\n  isCompleted_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype TaskPreviousValues {\n  id: ID!\n  title: String!\n  isCompleted: Boolean!\n}\n\ntype TaskSubscriptionPayload {\n  mutation: MutationType!\n  node: Task\n  updatedFields: [String!]\n  previousValues: TaskPreviousValues\n}\n\ninput TaskSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: TaskWhereInput\n  AND: [TaskSubscriptionWhereInput!]\n  OR: [TaskSubscriptionWhereInput!]\n  NOT: [TaskSubscriptionWhereInput!]\n}\n\ninput TaskUpdateInput {\n  title: String\n  isCompleted: Boolean\n  author: UserUpdateOneWithoutTasksInput\n}\n\ninput TaskUpdateManyMutationInput {\n  title: String\n  isCompleted: Boolean\n}\n\ninput TaskUpdateManyWithoutAuthorInput {\n  create: [TaskCreateWithoutAuthorInput!]\n  delete: [TaskWhereUniqueInput!]\n  connect: [TaskWhereUniqueInput!]\n  disconnect: [TaskWhereUniqueInput!]\n  update: [TaskUpdateWithWhereUniqueWithoutAuthorInput!]\n  upsert: [TaskUpsertWithWhereUniqueWithoutAuthorInput!]\n}\n\ninput TaskUpdateWithoutAuthorDataInput {\n  title: String\n  isCompleted: Boolean\n}\n\ninput TaskUpdateWithWhereUniqueWithoutAuthorInput {\n  where: TaskWhereUniqueInput!\n  data: TaskUpdateWithoutAuthorDataInput!\n}\n\ninput TaskUpsertWithWhereUniqueWithoutAuthorInput {\n  where: TaskWhereUniqueInput!\n  update: TaskUpdateWithoutAuthorDataInput!\n  create: TaskCreateWithoutAuthorInput!\n}\n\ninput TaskWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n  isCompleted: Boolean\n  isCompleted_not: Boolean\n  author: UserWhereInput\n  AND: [TaskWhereInput!]\n  OR: [TaskWhereInput!]\n  NOT: [TaskWhereInput!]\n}\n\ninput TaskWhereUniqueInput {\n  id: ID\n}\n\ntype User {\n  id: ID!\n  email: String\n  name: String!\n  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String\n  name: String!\n  tasks: TaskCreateManyWithoutAuthorInput\n}\n\ninput UserCreateOneWithoutTasksInput {\n  create: UserCreateWithoutTasksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutTasksInput {\n  email: String\n  name: String!\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateInput {\n  email: String\n  name: String\n  tasks: TaskUpdateManyWithoutAuthorInput\n}\n\ninput UserUpdateManyMutationInput {\n  email: String\n  name: String\n}\n\ninput UserUpdateOneWithoutTasksInput {\n  create: UserCreateWithoutTasksInput\n  update: UserUpdateWithoutTasksDataInput\n  upsert: UserUpsertWithoutTasksInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateWithoutTasksDataInput {\n  email: String\n  name: String\n}\n\ninput UserUpsertWithoutTasksInput {\n  update: UserUpdateWithoutTasksDataInput!\n  create: UserCreateWithoutTasksInput!\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  tasks_every: TaskWhereInput\n  tasks_some: TaskWhereInput\n  tasks_none: TaskWhereInput\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n";
